pipeline {
    agent any
    stages {
        stage('Compile') {
	   steps {
                echo 'compiling..'
		git url: 'https://github.com/premkumarkirankumar/sampleApplicationDevops'
		sh script: '/opt/apache-maven-3.8.4/bin/mvn compile'
           }
        }
        stage('CodeReview-pmd') {
	   steps {
                echo 'codereview..'
		sh script: '/opt/apache-maven-3.8.4/bin/mvn -P metrics pmd:pmd'
           }
	   post {
               success {
		   recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
               }
           }		
        }
        stage('UnitTests') {
	   steps {
                echo 'unittest..'
	        sh script: '/opt/apache-maven-3.8.4/bin/mvn test'
                 }
	   post {
               success {
                   junit 'target/surefire-reports/*.xml'
               }
           }			
        }
        stage('CodeCoverage') {
	   steps {
                echo 'codecoverage..'
		sh script: '/opt/apache-maven-3.8.4/bin/mvn cobertura:cobertura -Dcobertura.report.format=xml'
           }
	   post {
               success {
	           cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false                  
               }
           }		
        }
        stage('Package') {
	   steps {
                echo 'package..'
		sh script: '/opt/apache-maven-3.8.4/bin/mvn package'	
           }		
        }
	    stage('Image') {
	   steps {
                echo 'image..'
		sh script: 'sudo cp /var/lib/jenkins/workspace/JavaApp1/ProjectPipeline/target/petclinic.war .'				
		sh script: 'sudo touch Dockerfile'		
		sh script: 'sudo chmod 777 Dockerfile'				
		sh script: 'echo "FROM tomcat:8" >> Dockerfile'		
		sh script: 'echo "ADD petclinic.war /usr/local/tomcat/webapps/" >> Dockerfile'		
		sh script: 'echo "CMD "catalina.sh" "run"" >> Dockerfile'		
		sh script: 'echo "EXPOSE 8080" >> Dockerfile'						
		sh script: 'sudo docker build -t 5688kiran/sampledevopsapplication:$BUILD_NUMBER .'	
		sh script: 'sudo docker login -u 5688kiran -p Munny*5688'				
		sh script: 'sudo docker push 5688kiran/sampledevopsapplication:$BUILD_NUMBER'	
		   }
        }
    }
}
